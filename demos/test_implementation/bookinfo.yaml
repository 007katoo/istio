# Copyright 2017 Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    app: details
spec:
  ports:
  - port: 9080
    targetPort: 9080
    protocol: TCP
    name: http
  selector:
    app: details
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: details-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: details
        version: v1
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "docker.io/rshriram/istio-init:stable",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: details
        image: docker.io/rshriram/go-bookinfo-details-v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      - name: proxy
        image: docker.io/rshriram/istio-manager:stable
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - -s
          - istio-route-controller:8080
          - --logtostderr
          - -v
          - "2"
        imagePullPolicy: Always
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    app: ratings
spec:
  ports:
  - port: 9080
    targetPort: 9080
    protocol: TCP
    name: http
  selector:
    app: ratings
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ratings-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "docker.io/rshriram/istio-init:stable",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: ratings
        image: docker.io/rshriram/go-bookinfo-ratings-v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      - name: proxy
        image: docker.io/rshriram/istio-manager:stable
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - -s
          - istio-route-controller:8080
          - --logtostderr
          - -v
          - "2"
        imagePullPolicy: Always
---
##################################################################################################
# Reviews service
##################################################################################################

apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
spec:
  ports:
  - port: 9080
    targetPort: 9080
    protocol: TCP
    name: http
  selector:
    app: reviews
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "docker.io/rshriram/istio-init:stable",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: reviews
        image: docker.io/rshriram/go-bookinfo-reviews-v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      - name: proxy
        image: docker.io/rshriram/istio-manager:stable
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - -s
          - istio-route-controller:8080
          - --logtostderr
          - -v
          - "2"
        imagePullPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v2
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "docker.io/rshriram/istio-init:stable",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: reviews
        image: docker.io/rshriram/go-bookinfo-reviews-v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      - name: proxy
        image: docker.io/rshriram/istio-manager:stable
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - -s
          - istio-route-controller:8080
          - --logtostderr
          - -v
          - "2"
        imagePullPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v3
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v3
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "docker.io/rshriram/istio-init:stable",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: reviews
        image: docker.io/rshriram/go-bookinfo-reviews-v3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      - name: proxy
        image: docker.io/rshriram/istio-manager:stable
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - -s
          - istio-route-controller:8080
          - --logtostderr
          - -v
          - "2"
        imagePullPolicy: Always
---
##################################################################################################
# Productpage service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
spec:
  ports:
  - port: 9080
    targetPort: 9080
    nodePort: 32000
    protocol: TCP
    name: http
  selector:
    app: productpage
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: productpage-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: productpage
        version: v1
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "docker.io/rshriram/istio-init:stable",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: productpage
        image: docker.io/rshriram/go-bookinfo-productpage-v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      - name: proxy
        image: docker.io/rshriram/istio-manager:stable
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - -s
          - istio-route-controller:8080
          - --logtostderr
          - -v
          - "2"
        imagePullPolicy: Always
---
###########################################################################
# Standard ingress controllers will not work as they refer to the pod IP instead
# of the host IP. Our Envoy config is currently generating virtual hosts that
# match on service IP, or service Name only.
##########################################################################
