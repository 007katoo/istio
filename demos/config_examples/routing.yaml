# Example 1: Route API calls for /serviceB/api/v1 from experimental serviceA
# running in staging to serviceB pods running in prod.
#
---
# ProxyConfig
routeRules:
- http:
    match:
      srcCluster:
        name: serviceA
        tags:
        - env=staging
        - experimental=true
      scheme: http
      uri:
        prefix: "/serviceB/api/v1"
    weightedClusters:
    - dstCluster:
        name: serviceB
        tags:
        - env=prod 
      weight: 100
upstreamClusters:
- cluster:
    name: serviceB
    tags:
    - env=prod
  lbPolicy:
    name: ROUND_ROBIN

# Example 2: Send 1% of /serviceB/api/v1 traffic from serviceA in prod to serviceB v1.1
# cluster while sending the rest to serviceB v1 cluster.
#
---
# ProxyConfig
routeRules:
- http:
    match:
      srcCluster:
        name: serviceA
        tags:
        - env=prod
      scheme: http
      uri:
        prefix: "/serviceB/api/v1"
    weightedClusters:
    - dstCluster:
        name: serviceB
        tags:
        - env=prod
        - v1.1
      weight: 1
    - dstCluster:
        name: serviceB
        tags:
        - env=prod
        - v1
      weight: 99
upstreamClusters:
- cluster:
    name: serviceB
    tags:
    - env=prod
    - v1
  lbPolicy:
    name: ROUND_ROBIN
- cluster:
    name: serviceB
    tags:
    - env=prod
    - v1.1
  lbPolicy:
    name: ROUND_ROBIN

# Example 3: Route requests for serviceB (identified by host header) that contain a header 
# matching a specific pattern (e.g., user cookie for a test user) to specific version of serviceB (v1.1).
#
---
# ProxyConfig
routeRules:
- http:
    match:
      scheme: http
      authority:
        exact: "serviceB.cluster.local"
      headers:
        cookie: 
          regex: ".*?user=tester1"
    weightedClusters:
    - dstCluster:
        name: serviceB
        tags:
        - v1.1
      weight: 100
upstreamClusters:
- cluster:
    name: serviceB
    tags:
    - v1.1
  lbPolicy:
    name: ROUND_ROBIN

# Example 4: Version-based routing for TCP services. Scenario: Upgrading a database slaveâ€™s version.
# Stand up a newer version of the database engine. Assuming that the data has already been replicated,
# run the new version in production for a while, sending it 1% of connections, and see if there are
# any major issues.
#
---
# ProxyConfig
routeRules:
- layer4:
    match:
      l4attributes:
        protocol: tcp
        dstPort: 3306
    weightedClusters:
    - dstCluster:
        hosts: # this is not currently in proto, TODO: how to really do this? 
        - tcp://trial.prod.slave.db.mydomain:5505
      weight: 1
    - dstCluster:
        hosts: # this is not currently in proto, TODO: how to really do this? 
        - tcp://1.prod.slave.db.mydomain:5505
        - tcp://2.prod.slave.db.mydomain:5505
        - tcp://3.prod.slave.db.mydomain:5505
      weight: 99
upstreamClusters:
- cluster:
    hosts: # this is not currently in proto, TODO: how to really do this? 
    - tcp://1.prod.slave.db.mydomain:5505
    - tcp://2.prod.slave.db.mydomain:5505
    - tcp://3.prod.slave.db.mydomain:5505
  lbPolicy:
    name: IP_HASH
- cluster:
    hosts:
    - tcp://trial.prod.slave.db.mydomain:5505
  lbPolicy:
    name: IP_HASH

# Example: Helloworld from Amalgam8 (https://github.com/frankbu/istio/blob/097e10405c4e739f3be4432eb84c033aea3aee8d/demos/helloworld.md)
#
---
# ProxyConfig: all traffic routed to helloworld v1
routeRules:
- http:
    match:
      scheme: http
      uri:
        prefix: "/helloworld/"
    weightedClusters:
    - dstCluster:
        name: helloworld
        tags:
        - v1 
      weight: 100
upstreamClusters:
- cluster:
    name: helloworld
    tags:
    - v1
  lbPolicy:
    name: ROUND_ROBIN
---
# ProxyConfig: 25% of traffic routed to helloworld v2, the rest to v1
routeRules:
- http:
    match:
      scheme: http
      uri:
        prefix: "/helloworld/"
    weightedClusters:
    - dstCluster:
        name: helloworld
        tags:
        - v2 
      weight: 25
    - dstCluster:
        name: helloworld
        tags:
        - v1 
      weight: 75
upstreamClusters:
- cluster:
    name: helloworld
    tags:
    - v1
  lbPolicy:
    name: ROUND_ROBIN
- cluster:
    name: helloworld
    tags:
    - v2
  lbPolicy:
    name: ROUND_ROBIN
